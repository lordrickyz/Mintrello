{"version":3,"sources":["images/Mintrello-Butler.gif","images/splashfiller1.gif","images/splashfiller2.gif","images/buter-pocket.jpg","images/main.png","images/drag_card.gif","images/create_newlist.gif","images/drag_list.gif","images/edit_card_title.gif","images/edit_card_description.gif","images/create_card.gif","images/delete_card.gif","images/list_title.gif","images/delete_list.gif","components/actions/modal_actions.js","components/actions/columnActions.js","components/card/card_show.jsx","components/actions/cardActions.js","components/modal/resetBoard.jsx","components/actions/resetActions.js","components/modal/modal.jsx","components/nav/navbar.jsx","components/splash/footer.jsx","components/splash/splashPage.jsx","components/card/card.jsx","components/card/card_form.jsx","components/actions/counterActions.js","components/column/column.jsx","components/column/column_form.jsx","initial_data.js","components/dashboard/dashboard.jsx","components/actions/columnOrderActions.js","components/tutorial/tutorial.jsx","components/App.js","components/root.js","components/reducers/modal_reducer.js","components/reducers/cardReducer.js","components/reducers/columnsReducer.js","components/reducers/columnOrderReducer.js","components/reducers/counterReducer.js","components/reducers/resetDataReducer.js","components/reducers/root_reducer.js","components/store/store.js","index.js"],"names":["module","exports","openModal","component","card","column","type","modal","updateColumn","CardShow","props","state","id","title","description","update","bind","handleClick","deleteCard","field","e","setState","currentTarget","value","stopPropagation","this","editCard","closeModal","newCardIds","cardIds","filter","newColumn","removeCard","titleBlock","className","icon","faPencilAlt","spellCheck","defaultValue","onChange","onClick","faTimes","descriptionBlock","faAlignJustify","placeholder","React","Component","connect","dispatch","updateCard","cardId","ResetBoard","preventDefault","resetData","style","position","right","top","margin","Navbar","to","Footer","faGithub","href","target","faLinkedin","SplashPage","src","butler","alt","splashImageOne","splashImageTwo","butlerPocket","Card","draggableId","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","CardForm","handleSubmit","newCard","counter","receiveCard","updateCounter","concat","onSubmit","disabled","Column","handleClickOutside","container","current","createRef","deleteColumn","document","addEventListener","removeEventListener","removeColumn","cards","droppableId","backgroundColor","isDraggingOver","droppableProps","map","key","columnId","ColumnForm","handleReset","receiveColumn","width","marginLeft","initialData","columns","columnOrder","DashBoard","onDragEnd","result","destination","source","newColumnOrder","Array","from","splice","receiveColumnOrder","start","finish","startCardIds","newStart","finishCardIds","newFinish","updateColumns","direction","reset","initalData","localStorage","removeItem","window","location","reload","setItem","JSON","stringify","Tutorial","main","createCard","createList","dragCard","dragList","cardDescription","listTitle","deleteList","App","exact","path","Dashboard","Root","store","modalReducer","action","Object","freeze","cardsReducer","newState","assign","i","length","columnsReducer","columnOrderReducer","push","counterReducer","resetDataReducer","rootReducer","combineReducers","configureStore","preloadedState","createStore","applyMiddleware","thunk","logger","root","getElementById","undefined","getItem","parse","getState","ReactDOM","render"],"mappings":"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","file":"static/js/main.5fd1cbbf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Mintrello-Butler.39efeebc.gif\";","module.exports = __webpack_public_path__ + \"static/media/splashfiller1.2c273915.gif\";","module.exports = __webpack_public_path__ + \"static/media/splashfiller2.9c41f4d9.gif\";","module.exports = __webpack_public_path__ + \"static/media/buter-pocket.824b9f8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/main.6cb3861d.png\";","module.exports = __webpack_public_path__ + \"static/media/drag_card.68ae77b1.gif\";","module.exports = __webpack_public_path__ + \"static/media/create_newlist.2faf547f.gif\";","module.exports = __webpack_public_path__ + \"static/media/drag_list.9d434513.gif\";","module.exports = __webpack_public_path__ + \"static/media/edit_card_title.ebe523fb.gif\";","module.exports = __webpack_public_path__ + \"static/media/edit_card_description.5341eaab.gif\";","module.exports = __webpack_public_path__ + \"static/media/create_card.22db11eb.gif\";","module.exports = __webpack_public_path__ + \"static/media/delete_card.cbe5b823.gif\";","module.exports = __webpack_public_path__ + \"static/media/list_title.8a4239a5.gif\";","module.exports = __webpack_public_path__ + \"static/media/delete_list.f7e8292b.gif\";","export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const openModal = (component, card, column) => ({\n  type: OPEN_MODAL,\n  modal: {\n    component,\n    card,\n    column,\n  },\n});\n\nexport const closeModal = () => ({\n  type: CLOSE_MODAL,\n});\n","export const RECEIVE_COLUMNS = \"RECEIVE_COLUMNS\";\nexport const RECEIVE_COLUMN = \"RECEIVE_COLUMN\";\nexport const DELETE_COLUMN = \"DELETE_COLUMN\";\nexport const UPDATE_COLUMN = \"UPDATE_COLUMN\";\nexport const UPDATE_COLUMNS = \"UPDATE_COLUMNS\";\n\nexport const receiveColumns = (columns) => {\n  return {\n    type: RECEIVE_COLUMNS,\n    columns,\n  };\n};\nexport const receiveColumn = (column) => {\n  return {\n    type: RECEIVE_COLUMN,\n    column,\n  };\n};\nexport const deleteColumn = (column) => {\n  return {\n    type: DELETE_COLUMN,\n    column,\n  };\n};\nexport const updateColumn = (column) => {\n  return {\n    type: UPDATE_COLUMN,\n    column,\n  };\n};\n\nexport const updateColumns = (columns) => {\n  return {\n    type: UPDATE_COLUMNS,\n    columns,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faPencilAlt,\n  faAlignJustify,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { closeModal } from \"./../actions/modal_actions\";\nimport {updateCard, deleteCard } from './../actions/cardActions'\nimport {updateColumn} from './../actions/columnActions'\n\nconst mdtp = (dispatch) => {\n  return {\n    closeModal: () => dispatch(closeModal()),\n    editCard: (card) => dispatch(updateCard(card)),\n    removeCard: (cardId) => dispatch(deleteCard(cardId)),\n    updateColumn: (column) => dispatch(updateColumn(column))\n  };\n};\n\nclass CardShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.card.id,\n      title: this.props.card.title,\n      description: this.props.card.description,\n    };\n    this.update = this.update.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.deleteCard = this.deleteCard.bind(this)\n  }\n\n  update(field) {\n    return (e) => {\n      this.setState({ [field]: e.currentTarget.value });\n    };\n  }\n\n  handleClick(e) {\n    e.stopPropagation();\n    this.props.editCard(this.state);\n    this.props.closeModal();\n  }\n\n  deleteCard() {\n    const { column, card } = this.props;\n    const newCardIds = column.cardIds.filter((id) => card.id !== id);\n    const newColumn = { ...column, cardIds: newCardIds };\n    this.props.updateColumn(newColumn);\n    this.props.removeCard(this.props.card.id)\n    this.props.closeModal();\n  }\n\n  render() {\n    const titleBlock = (\n      <div className=\"card-title-container\">\n        <span className=\"card-title-icon\" id=\"card-show-icons\">\n          <FontAwesomeIcon icon={faPencilAlt} />\n          <h3>Title</h3>\n        </span>\n        <br/>\n        <textarea\n          className=\"card-title-editor\"\n          spellCheck=\"false\"\n          defaultValue={this.state.title}\n          onChange={this.update(\"title\")}\n        />\n        <span className=\"card-show-close\" onClick={this.handleClick}>\n          <FontAwesomeIcon icon={faTimes} />\n        </span>\n        <div className=\"card-show-listname\">\n        </div>\n      </div>\n    );\n\n    const descriptionBlock = (\n      <div className=\"card-description\">\n        <div className=\"card-description-top\">\n          <span className=\"card-desc-icon\" id=\"card-show-icons\">\n            <FontAwesomeIcon icon={faAlignJustify} />\n          </span>\n          <h3>Description</h3>\n        </div>\n        <textarea\n          className=\"card-description-editor\"\n          defaultValue={this.state.description}\n          // value={this.state.description}\n          onChange={this.update(\"description\")}\n          placeholder=\"Click here to add a description...\"\n          spellCheck=\"false\"\n        ></textarea>\n      </div>\n    );\n\n    return (\n      <div className=\"card-show\">\n        <div className=\"card-show-title\"> {titleBlock} </div>\n        <div className=\"card-show-desc\"> {descriptionBlock} </div>\n        <button className='show-card-delete' onClick={this.deleteCard}> Delete Card</button>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mdtp)(CardShow);\n","export const RECEIVE_CARD = \"RECEIVE_CARD\";\nexport const DELETE_CARD = \"DELETE_CARD\";\nexport const DELETE_COLUMN = \"DELETE_COLUMN\";\nexport const UPDATE_CARD = \"UPDATE_CARD\";\n\nexport const receiveCard = (card) => {\n  return {\n    type: RECEIVE_CARD,\n    card,\n  };\n};\nexport const deleteCard = (cardId) => {\n  return {\n    type: DELETE_CARD,\n    cardId,\n  };\n};\n\nexport const updateCard = (card) => {\n  return {\n    type: UPDATE_CARD,\n    card,\n  };\n};\n","import React from \"react\"\nimport {closeModal} from \"./../actions/modal_actions\"\nimport {connect} from 'react-redux'\nimport {resetData} from './../actions/resetActions'\nimport {\n  faTimes\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass ResetBoard extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.handleClick = this.handleClick.bind(this);\n\n  }\n  handleClick(e){\n\n    e.preventDefault();\n    this.props.closeModal()\n    this.props.resetData()\n\n  }\n\n  render(){\n    return(\n      <div className=\"card-show\" style={{position: \"relative\"}}>\n        <span className=\"card-show-close\" onClick={() => this.props.closeModal()} style={{position: \"absolute\",right: '10px',\n    top: '5px'}}>\n          <FontAwesomeIcon icon={faTimes} />\n        </span>\n        <button onClick={this.handleClick} className=\"show-card-delete\" style={{margin: '30px 0px 40px 74px'}}>\n          Confirm Board Reset!\n        </button>\n      </div>\n    )\n      \n    \n  }\n}\nconst mDTP = dispatch => ({\n    closeModal: () => dispatch(closeModal()),\n    resetData: () => dispatch(resetData()),\n  })\n\n\nexport default connect(null, mDTP)(ResetBoard);","export const RESET_DATA = \"RESET_PAGE\";\n\nexport const resetData = () => ({\n  type: RESET_DATA,\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { closeModal } from './../actions/modal_actions'\nimport CardShow from \"../card/card_show\";\nimport ResetBoard from \"./resetBoard\"\nimport \"./modal.css\";\n\nconst Modal = ({ modal }) => {\n  if (!modal) {\n    return null;\n  }\n  let component;\n  switch (modal.component) {\n    case \"show-card\":\n      component = <CardShow card={modal.card} column={modal.column} />;\n      break;\n    case \"resetBoard\":\n      component = <ResetBoard />\n      break;\n    default:\n      return null;\n  }\n\n  return (\n    <div className={`modal-background`}>\n      <div className=\"modal-child\" onClick={(e) => e.stopPropagation()}>\n        {component}\n      </div>\n    </div>\n  );\n};\n\nconst msp = (state) => {\n  return {\n    modal: state.modal,\n  };\n};\n\nconst mdp = (dispatch) => {\n  return {\n    closeModal: () => dispatch(closeModal()),\n  };\n};\n\nexport default connect(msp, mdp)(Modal);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends React.Component {\n  render() {\n\n\n    return (\n      <nav className=\"navbar-container\">\n        <Link to=\"/\">\n          <h3>Mintrello</h3>\n        </Link>\n      </nav>\n    );\n\n  }\n};\n\nexport default Navbar;\n\n\n\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\n\nclass Footer extends React.Component {\n\n  render() {\n    return (\n      <footer className=\"footer\">\n        <h1 className=\"about\">~ Meet the Engineers ~</h1>\n        <div className=\"footer-desc\">\n          <div className=\"githubs\">\n            <h3>\n              <FontAwesomeIcon icon={faGithub} /> &nbsp;Github Links\n            </h3>\n            <section className=\"github-links\">\n              <a href=\"https://github.com/lordrickyz/mintrello\" target=\"_blank\">\n                Github Repo\n              </a>\n              <a href=\"https://github.com/lordrickyz\" target=\"_blank\">\n                Ricky Zheng\n              </a>\n              <a href=\"https://github.com/CGodl\" target=\"_blank\">\n                Carl Godlewski\n              </a>\n              <a href=\"https://github.com/LouisVelz\" target=\"_blank\">\n                Louis Velazquez\n              </a>\n            </section>\n          </div>\n\n          <div className=\"linkedins\">\n            <h3>\n              <FontAwesomeIcon icon={faLinkedin} /> &nbsp;Linkedin Links\n            </h3>\n            <section className=\"linkedin-links\">\n              <a\n                href=\"https://www.linkedin.com/in/rickyzhengs/\"\n                target=\"_blank\"\n              >\n                Ricky Zheng\n              </a>\n              <a\n                href=\"https://www.linkedin.com/in/louis-velazquez-bb63085a/\"\n                target=\"_blank\"\n              >\n                Louis Velazquez\n              </a>\n              <a\n                href=\"https://www.linkedin.com/in/carl-godlewski-b64b0512/\"\n                target=\"_blank\"\n              >\n                Carl Godlewski\n              </a>\n            </section>\n          </div>\n        </div>\n      </footer>\n    );\n  } \n}\n\nexport default Footer;","import React from \"react\";\nimport Navbar from \"../nav/navbar\";\nimport butler from \"../../images/Mintrello-Butler.gif\";\nimport splashImageOne from \"../../images/splashfiller1.gif\";\nimport splashImageTwo from \"../../images/splashfiller2.gif\";\nimport butlerPocket from '../../images/buter-pocket.jpg';\nimport Footer from './footer'\nimport { Link } from 'react-router-dom';\n\nclass SplashPage extends React.Component {\n  render() {\n    return (\n      <div className=\"splash-page-container\">\n        <header>\n          <Navbar />\n        </header>\n        <div className=\"splash-page-top\">\n          <img\n            className=\"butler-gif\"\n            src={butler}\n            alt=\"The Butler is missing :O\"\n          />\n          <div className=\"splash-page-main-words\">\n            <h1>Mintrello</h1>\n            <p>Keep project planning sweet and simple</p>\n            <ul className=\"start-buttons-container\">\n              <li>\n                <Link to=\"/tutorial\">\n                  <button className=\"left-start-btn\">Tutorial</button>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/dashboard\">\n                  <button className=\"right-start-btn\">Get Started</button>\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <ul className=\"splash-page-body\">\n          <li>\n            <h1>\n              Track\n              <br />\n              <p>\n                With Mintrello you don't have to worry about losing track of\n                project status. Keep up on current tasks with Mintrello's\n                project board. Break up projects in to smaller pieces with\n                cards.{\" \"}\n              </p>\n            </h1>\n\n            <img src={splashImageOne} alt=\"I'm missing :O\" />\n          </li>\n          <li>\n            <h1>\n              Complete\n              <br />\n              <p>\n                Complete, delete, forget. Mintrello's emphasis on a minimalist\n                structure ensures the only visible projects are the ones you\n                still need to complete.\n              </p>\n            </h1>\n            <img src={splashImageTwo} alt=\"I'm missing :O\" />\n          </li>\n          <li>\n            <h1>\n              Take anywhere\n              <br />\n              <p>\n                With Mintrello you keep track of projects on your PC or your\n                mobile. Mintrello's design ensures a clean interface no matter\n                your screen size.{\" \"}\n              </p>\n            </h1>\n            <img\n              className=\"butler-pocket\"\n              src={butlerPocket}\n              alt=\"I'm missing :O\"\n            />\n          </li>\n        </ul>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default SplashPage;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { connect } from \"react-redux\";\nimport { openModal } from \"./../actions/modal_actions\";\n\nconst mdtp = (dispatch) => {\n  return {\n    openModal: (card, column) => dispatch(openModal(\"show-card\", card, column)),\n  };\n};\n\nclass Card extends React.Component {\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.card.id} index={this.props.index}>\n        {(provided, snapshot) => (\n          <div\n            className=\"card-container\"\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <div\n              onClick={() =>\n                this.props.openModal(this.props.card, this.props.column)\n              }\n\n              id={\"card-click-container\"}\n            >\n              <span id={\"card-item-title\"}>{this.props.card.title}</span>\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport default connect(null, mdtp)(Card);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateCounter } from \"../actions/counterActions\";\nimport { receiveCard } from \"../actions/cardActions\";\nimport { updateColumn } from \"../actions/columnActions\";\n\nclass CardForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n    };\n\n    this.update = this.update.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  update(field) {\n    return (e) => {\n      this.setState({ [field]: e.currentTarget.value });\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const newCard = {\n      id: `card-${this.props.counter}`,\n      title: this.state.title,\n      description: \"\",\n    };\n    this.props.receiveCard(newCard);\n    this.setState({\n      title: \"\",\n    });\n    this.props.updateCounter();\n    const newCardIds = this.props.column.cardIds.concat(newCard.id);\n    const newColumn = { ...this.props.column, cardIds: newCardIds };\n    this.props.updateColumn(newColumn);\n  }\n\n  render() {\n    return (\n      <div className=\"card-form-container\">\n        <form onSubmit={this.handleSubmit} className=\"card-form\">\n          <input\n            type=\"text\"\n            value={this.state.title}\n            onChange={this.update(\"title\")}\n            className=\"card-input-title\"\n            placeholder=\"Enter Card Title\"\n          />\n\n          <input\n            type=\"submit\"\n            value=\"+Add Card\"\n            disabled={!this.state.title}\n            className=\"card-input-submit\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\nconst mSTP = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\n\nconst mDTP = (dispatch) => {\n  return {\n    updateCounter: () => dispatch(updateCounter()),\n    receiveCard: (card) => dispatch(receiveCard(card)),\n    updateColumn: (column) => dispatch(updateColumn(column)),\n  };\n};\n\nexport default connect(mSTP, mDTP)(CardForm);\n","export const UPDATE_COUNTER = \"UPDATE_COUNTER\";\n\nexport const updateCounter = () => ({\n  type: UPDATE_COUNTER,\n});\n","import React from \"react\";\nimport Card from \"../card/card\";\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport CardForm from \"../card/card_form\";\nimport {connect} from 'react-redux';\nimport {deleteColumn, updateColumn} from './../actions/columnActions';\n\n\n\nclass Column extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.column.id,\n      title: this.props.column.title,\n      cardIds: this.props.column.cardIds,\n    };\n\n    this.container = React.createRef();\n    this.deleteColumn = this.deleteColumn.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  handleClickOutside = (e) => {\n    if (this.container.current.value !== this.props.column.title) {\n      const newColumn = {\n        ...this.props.column,\n        title: this.container.current.value,\n      };\n      this.props.updateColumn(newColumn);\n    }\n  };\n\n  deleteColumn() {\n    this.props.removeColumn(this.props.column)\n  }\n\n  render() {\n    const {column, index, cards} = this.props\n    debugger\n    return (\n      <Draggable draggableId={column.id} index={index}>\n        {(provided) => (\n          <div\n            className=\"column-container\"\n            {...provided.draggableProps}\n            ref={provided.innerRef}\n          >\n            <div className=\"column-item-header\" {...provided.dragHandleProps}>\n              <textarea\n                className=\"list-name-editor\"\n                ref={this.container}\n                defaultValue={column.title}\n              ></textarea>\n            </div>\n            <Droppable droppableId={column.id} type=\"card\">\n              {(provided, snapshot) => (\n                <div \n                  className=\"column-card-container\"\n                  ref={provided.innerRef}\n                  style={{ backgroundColor: snapshot.isDraggingOver ? '#ff7f7f' : 'inherit' }}\n                  {...provided.droppableProps}\n                >\n                  \n                  {column.cardIds.map((cardId, index) => (\n                    <Card\n                      key={cardId}\n                      column={this.props.column}\n                      index={index}\n                      card={cards[cardId]}\n                      updateColumn={this.props.updateColumn}\n                    />\n                  ))}\n                  {provided.placeholder}\n\n                  <CardForm\n                    column={this.props.column}\n                  />\n                  <button className= 'remove-clmn-btn' onClick={this.deleteColumn}>\n                    Remove Column\n                  </button>\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mSTP = (state) => {\n  return {\n    cards: state.cards,\n  };\n};\nconst mDTP = (dispatch) => {\n  return {\n    removeColumn: (columnId) => dispatch(deleteColumn(columnId)),\n    updateColumn: (column) => dispatch(updateColumn(column)),\n  };\n};\n\nexport default connect(mSTP, mDTP)(Column);\n","import React from \"react\";\nimport {connect} from 'react-redux';\nimport {receiveColumn} from '../actions/columnActions';\nimport {updateCounter} from '../actions/counterActions';\nimport { openModal } from \"../actions/modal_actions\";\n\nclass ColumnForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n    };\n\n    this.update = this.update.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  update(field) {\n    return (e) => {\n      this.setState({ [field]: e.currentTarget.value });\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.receiveColumn({\n      id: `column-${this.props.counter}`,\n      title: this.state.title,\n      cardIds: [],\n    });\n    this.props.updateCounter();\n    this.setState({ title: \"\" });\n  }\n\n  handleReset(e){\n    e.preventDefault();\n    this.props.openModal(\"resetBoard\")\n  }\n\n  render() {\n    return (\n      <div className=\"list-form-container\">\n        <form onSubmit={this.handleSubmit} className=\"list-form\">\n          <input\n            type=\"text\"\n            value={this.state.title}\n            onChange={this.update(\"title\")}\n            className=\"list-input-title\"\n            placeholder=\"Enter Column Title...\"\n          />\n\n          <input\n            type=\"submit\"\n            value=\"+Add Column\"\n            disabled={!this.state.title}\n            className=\"list-input-submit\"\n          />\n        </form>\n        <button className=\"list-input-submit\" onClick={this.handleReset} style={{width: \"inherit\", marginLeft: 0}}>\n          Reset Board!\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mSTP = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\nconst mDTP = (dispatch) => {\n  return {\n    receiveColumn: (column) => dispatch(receiveColumn(column)),\n    updateCounter: () => dispatch(updateCounter()),\n    openModal: (type) => dispatch(openModal(type))\n  };\n};\n\nexport default connect (mSTP, mDTP)(ColumnForm);\n","const initialData = {\n  cards: {\n    \"card-1\": {\n      id: \"card-1\",\n      title: \"Wireframe Design\",\n      description: \"Redesign all wireframe for my new application\",\n    },\n    \"card-2\": {\n      id: \"card-2\",\n      title: \"API Design\",\n      description: \"Make a decision between Rails and Mongo\",\n    },\n    \"card-3\": {\n      id: \"card-3\",\n      title: \"hardware restrictions \",\n      description: \"Research mobile devices for hardware restrictions\",\n    },\n    \"card-4\": {\n      id: \"card-4\",\n      title: \"API vs Serverless\",\n      description: \"Choose between API and a serverless option\",\n    },\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"To Do\",\n      cardIds: [\"card-1\", \"card-2\", \"card-3\", \"card-4\"],\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"In Progress\",\n      cardIds: [],\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Done\",\n      cardIds: [],\n    },\n  },\n  // Facilitate reordering of the columns\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\"],\n  counter: 100,\n};\n\nexport default initialData;\n","import React from \"react\";\nimport Column from \"../column/column\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { connect } from \"react-redux\";\nimport ColumnForm from \"../column/column_form\";\nimport Navbar from \"../nav/navbar\";\nimport {receiveColumnOrder} from './../actions/columnOrderActions'\nimport {updateColumn, updateColumns} from './../actions/columnActions'\nimport initalData from './../../initial_data'\n\nclass DashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // Drag and Drop Function\n  onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === \"column\") {\n      const newColumnOrder = Array.from(this.props.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n      this.props.receiveColumnOrder(newColumnOrder);\n      return;\n    }\n\n    const start = this.props.columns[source.droppableId];\n    const finish = this.props.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newCardIds = Array.from(start.cardIds);\n      newCardIds.splice(source.index, 1);\n      newCardIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        cardIds: newCardIds,\n      };\n      this.props.updateColumn(newColumn)\n      return;\n    }\n\n    //Moving from one list to another\n    const startCardIds = Array.from(start.cardIds);\n    startCardIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      cardIds: startCardIds,\n    };\n\n    const finishCardIds = Array.from(finish.cardIds);\n    finishCardIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      cardIds: finishCardIds,\n    };\n    this.props.updateColumns([newStart, newFinish])\n  };\n\n\n  render() {\n    return (\n      <div>\n      <header className='dashboard-nav'><Navbar/></header>\n      <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable\n            droppableId=\"all-columns\"\n            direction=\"horizontal\"\n            type=\"column\"\n          >\n            {(provided) => (\n              <div\n                className=\"dashboard-container\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {this.props.columnOrder.map((columnId, index) => {\n                  return (\n                    <Column\n                      key={columnId}\n                      column={this.props.columns[columnId]}\n                      index={index}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n\n                <ColumnForm\n                  counter={this.props.counter}\n                />\n              </div>\n            )}\n          </Droppable>\n      </DragDropContext>\n      </div>\n    );\n  }\n}\n\n\nconst mSTP = (state) => {\n  if(state.reset){\n    state = initalData\n    localStorage.removeItem(\"mintrello\");\n    window.location.reload();\n  }\n  localStorage.setItem(\"mintrello\", JSON.stringify(state));\n  return {\n    columnOrder: state.columnOrder,\n    columns: state.columns,\n    counter: state.counter,\n  };\n};\n\nconst mDTP = (dispatch) => {\n  return {\n    receiveColumnOrder: (columnOrder) =>\n    dispatch(receiveColumnOrder(columnOrder)),\n    updateColumn: (column) => dispatch(updateColumn(column)),\n    updateColumns: (columns) => dispatch(updateColumns(columns)),\n  };\n}\n\n\nexport default connect(mSTP, mDTP)(DashBoard);\n","export const RECEIVE_COLUMN_ORDER = \"RECEIVE_COLUMN_ORDER\";\nexport const RECEIVE_COLUMN = \"RECEIVE_COLUMN\";\nexport const DELETE_COLUMN = \"DELETE_COLUMN\";\n\nexport const receiveColumnOrder = (columnOrder) => {\n  return {\n    type: RECEIVE_COLUMN_ORDER,\n    columnOrder,\n  };\n};\n","import React from \"react\";\nimport Navbar from \"../nav/navbar\";\nimport Footer from \"../splash/footer\";\n// import \"./tutorial.scss\";\nimport main from \"../../images/main.png\";\nimport { Link } from \"react-router-dom\";\nimport dragCard from \"../../images/drag_card.gif\";\nimport createList from \"../../images/create_newlist.gif\";\nimport dragList from \"../../images/drag_list.gif\";\nimport editCard from \"../../images/edit_card_title.gif\";\nimport cardDescription from \"../../images/edit_card_description.gif\";\nimport createCard from \"../../images/create_card.gif\";\nimport deleteCard from \"../../images/delete_card.gif\";\nimport listTitle from \"../../images/list_title.gif\";\nimport deleteList from \"../../images/delete_list.gif\";\n\nexport default class Tutorial extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"tutorial-bg\">\n        <Navbar />\n        <div className=\"tutorial\">\n          <h1>Tutorial</h1>\n          <div className=\"tutorial-steps\">\n            <div className=\"inner-text\">\n              <h3>Main Page</h3>\n              <p>\n                The main page starts with three lists, \"To Do\", \"In Progress\"\n                and \"Done\"\n              </p>\n            </div>\n            <img src={main} />\n          </div>\n          <div className=\"tutorial-steps\">\n            <img src={createCard} />\n            <div className=\"inner-text\">\n              <h3>Creating a Card</h3>\n              <p>\n                To create a card simply click on the \"Enter Card Title\" at the\n                bottom of a list and then click \"Add Card\"\n              </p>\n            </div>\n          </div>\n          <div className=\"tutorial-steps\">\n            <div className=\"inner-text\">\n              <h3>Creating a List</h3>\n              <p>\n                To create a list simply click on the \"Enter List Title\" to the\n                right of the page and then click \"Add List\"\n              </p>\n            </div>\n            <img src={createList} />\n          </div>\n          <div className=\"tutorial-steps\">\n            <img src={dragCard} />\n            <div className=\"inner-text\">\n              <h3>Draging a Card</h3>\n              <p>\n                Cards can be grad from list to another by clicking on the card\n                and dragging it to another list\n              </p>\n            </div>\n          </div>\n          <div className=\"tutorial-steps\">\n            <div className=\"inner-text\">\n              <h3>Draging a List</h3>\n              <p>\n                Lists can be dragged to a different position by clicking on the\n                list and dragging them to a different place\n              </p>\n            </div>\n            <img src={dragList} />\n          </div>\n          <div className=\"tutorial-steps\">\n            <img src={editCard} />\n            <div className=\"inner-text\">\n              <h3>Updating a Card's Title</h3>\n              <p>\n                Clicking on a card will open the card for detailed information\n                about a card, to modify a card just click on the text and then\n                close a card\n              </p>\n            </div>\n          </div>\n          <div className=\"tutorial-steps\">\n            <div className=\"inner-text\">\n              <h3>Updating a Card's description</h3>\n              <p>\n                Once the card has been open, clicking on the description will\n                let you type and update the description. Simply close it to keep\n                the changes\n              </p>\n            </div>\n            <img src={cardDescription} />\n          </div>\n          <div className=\"tutorial-steps\">\n            <img src={listTitle} />\n            <div className=\"inner-text\">\n              <h3>Updating a List's Title</h3>\n              <p>\n                Simply clicking on a list's title and typing a different title\n                will change the title of the list. As easy as it gets.\n              </p>\n            </div>\n          </div>\n          <div className=\"tutorial-steps\">\n            <div className=\"inner-text\">\n              <h3>Erasing a Card</h3>\n              <p>\n                Erasing a Card requires clicking on a card and then clicking on\n                the erase button\n              </p>\n            </div>\n            <img src={deleteCard} />\n          </div>\n          <div className=\"tutorial-steps\">\n            <img src={deleteList} />\n            <div className=\"inner-text\">\n              <h3>Erasing a List</h3>\n              <p>\n                Simply click on the erase button at the buttom of a list to\n                erase the list and all the cards inside of it\n              </p>\n            </div>\n          </div>\n          <Link to=\"/dashboard\" className=\"tutorial-to-dashboard\">\n            <h1>Enjoy Mintrello!</h1>\n          </Link>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Modal from \"./modal/modal\";\nimport SplashPage from \"./splash/splashPage\";\nimport Dashboard from \"./dashboard/dashboard\";\nimport Tutorial from \"./tutorial/tutorial\";\nimport \"../styles/index.scss\";\n\nconst App = () => {\n  return (\n    <div>\n      <Modal />\n      <Switch>\n        <Route exact path=\"/\" component={SplashPage} />\n        <Route exact path=\"/tutorial\" component={Tutorial} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nexport default Root;\n","import { OPEN_MODAL, CLOSE_MODAL } from \"../actions/modal_actions\";\n\nconst modalReducer = (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case OPEN_MODAL:\n      return action.modal;\n    case CLOSE_MODAL:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n","import {\n  RECEIVE_CARD,\n  DELETE_CARD,\n  DELETE_COLUMN,\n  UPDATE_CARD,\n} from \"./../actions/cardActions\";\n\nconst cardsReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let newState = Object.assign({}, state);\n\n  switch (action.type) {\n    case RECEIVE_CARD:\n      return Object.assign({}, state, { [action.card.id]: action.card });\n    case DELETE_CARD:\n      delete newState[action.cardId];\n      return newState;\n    case DELETE_COLUMN:\n      for (let i = 0; i < action.column.cardIds.length; i++) {\n        delete newState[action.column.cardIds[i]];\n      }\n      return newState;\n    case UPDATE_CARD:\n      newState[action.card.id] = action.card;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;\n","import {\n  RECEIVE_COLUMN,\n  DELETE_COLUMN,\n  UPDATE_COLUMN,\n  UPDATE_COLUMNS,\n} from \"./../actions/columnActions\";\n\nconst columnsReducer = (state = {}, action) => {\n  Object.freeze(state);\n  const newState = Object.assign({}, state);\n\n  switch (action.type) {\n    case UPDATE_COLUMN:\n      newState[action.column.id] = action.column;\n      return newState;\n    case UPDATE_COLUMNS:\n      newState[action.columns[0].id] = action.columns[0];\n      newState[action.columns[1].id] = action.columns[1];\n      return newState;\n    case RECEIVE_COLUMN:\n      return Object.assign({}, newState, { [action.column.id]: action.column });\n    case DELETE_COLUMN:\n      delete newState[action.column.id];\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default columnsReducer;\n","import {\n  RECEIVE_COLUMN_ORDER,\n  RECEIVE_COLUMN,\n  DELETE_COLUMN,\n} from \"./../actions/columnOrderActions\";\n\nconst columnOrderReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let newState = Array.from(state);\n  switch (action.type) {\n    case RECEIVE_COLUMN_ORDER:\n      return action.columnOrder;\n    case RECEIVE_COLUMN:\n      newState.push(action.column.id);\n      return newState;\n    case DELETE_COLUMN:\n      newState = newState.filter((id) => id !== action.column.id);\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default columnOrderReducer;\n","import { UPDATE_COUNTER } from \"./../actions/counterActions\";\n\nconst counterReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let newState = state;\n  switch (action.type) {\n    case UPDATE_COUNTER:\n      newState++;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;\n","import { RESET_DATA } from \"../actions/resetActions\";\n\nconst initialState = false;\n\nconst resetDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RESET_DATA:\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport default resetDataReducer;\n","import { combineReducers } from \"redux\";\nimport modalReducer from \"./modal_reducer\";\nimport cardsReducer from \"./cardReducer\";\nimport columnsReducer from \"./columnsReducer\";\nimport columnOrderReducer from \"./columnOrderReducer\";\nimport counterReducer from \"./counterReducer\";\nimport resetDataReducer from \"./resetDataReducer\";\n\nconst rootReducer = combineReducers({\n  cards: cardsReducer,\n  modal: modalReducer,\n  columns: columnsReducer,\n  columnOrder: columnOrderReducer,\n  counter: counterReducer,\n  reset: resetDataReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/root_reducer\";\nimport logger from \"redux-logger\";\n\nconst configureStore = (preloadedState = {}) =>\n  createStore(rootReducer, preloadedState, applyMiddleware(thunk, logger));\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./components/root\";\nimport configureStore from \"./components/store/store\";\nimport initialData from \"./initial_data\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const root = document.getElementById(\"root\");\n  let preloadedState = undefined;\n  if (localStorage.getItem(\"mintrello\") != null) {\n    preloadedState = JSON.parse(localStorage.getItem(\"mintrello\"));\n  } else {\n    preloadedState = initialData;\n  }\n  const store = configureStore(preloadedState);\n  window.getState = store.getState;\n  ReactDOM.render(<Root store={store} />, root);\n});\n"],"sourceRoot":""}